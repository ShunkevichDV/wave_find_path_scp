proc_print_graph
=> nrel_main_idtf:
	[Выводит граф] (* <- lang_ru;; *);
	[Print graph] (* <- lang_en;; *);
<- scp_program;
-> rrel_key_sc_element: _process1;;

proc_print_graph = [*
_process1 
_<- scp_process;

_-> rrel_1:: rrel_in:: _graph;

_<= nrel_decomposition_of_action:: _... (*

	_-> rrel_1:: _..proc_print_graph_operator1 (*
		_<- searchSetStr5;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: _graph;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _el3;;
		_-> rrel_4:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc4;;
		_-> rrel_5:: rrel_fixed:: rrel_scp_const:: rrel_edge;;
	
		_->rrel_set_3:: rrel_assign:: rrel_scp_var:: _edges_set;;
		_=> nrel_then:: _..proc_print_graph_operator2;;		
		_=> nrel_else:: _..proc_print_graph_operator14;;	
	*);;
//	Создаем множество уже выведенных вершин.
	_-> _..proc_print_graph_operator2 (*
		_<- genEl;;
		_-> rrel_1:: rrel_assign:: rrel_const:: rrel_node:: rrel_scp_var:: _printed_vertexes;;

		_=> nrel_goto:: _..proc_print_graph_operator3;;
	*);;
//	Вывод всех ребер графа.
	_-> _..proc_print_graph_operator3 (*
		_<- searchElStr3;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _edges_set;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _cur_edge;;

		_=> nrel_then:: _..proc_print_graph_operator4;;
		_=> nrel_else:: _..proc_print_graph_operator14;; 		
	*);;

	_-> _..proc_print_graph_operator4 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: rrel_erase:: _arc2;;

		_=> nrel_goto:: _..proc_print_graph_operator5;;
	*);;
//	Получаем вершины, инцидентные ребру.
	_-> _..proc_print_graph_operator5 (*
		_<- call;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: proc_get_edge_vertexes;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _..params(*
			_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _cur_edge;;
			_-> rrel_2:: rrel_assign:: rrel_scp_var:: _first_inc_vertex;;
			_-> rrel_3:: rrel_assign:: rrel_scp_var:: _second_inc_vertex;;
		*);;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_print_graph_operator6;;
	*);;	

	_-> _..proc_print_graph_operator6 (*
		_<- waitReturn;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_print_graph_operator7;;
	*);;	
//	Выводим идентификатор первой вершины.
	_-> _..proc_print_graph_operator7 (*
		_<- searchElStr5;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _first_inc_vertex;;
		_-> rrel_2:: rrel_assign:: rrel_const:: rrel_common:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _print_value;;
		_-> rrel_4:: rrel_assign:: rrel_pos:: rrel_scp_var:: _arc4;;
		_-> rrel_5:: rrel_fixed:: rrel_scp_const:: nrel_system_identifier;;
	
		_=> nrel_then:: _..proc_print_graph_operator8;;		
		_=> nrel_else:: _..proc_print_graph_operator_return;;
	*);;

	_->_..proc_print_graph_operator8 (*
		_<-print;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _print_value;;

		_=>nrel_goto:: _.print_graph_operator9;;
	*);;

	_->_..proc_print_graph_operator9 (*
		_<-print;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: [==];;

		_=>nrel_goto:: _.print_graph_operator10;;
	*);;
//	Выводим идентификатор второй вершины.
	_-> _..proc_print_graph_operator10 (*
		_<- searchElStr5;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _second_inc_vertex;;
		_-> rrel_2:: rrel_assign:: rrel_const:: rrel_common:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _print_value;;
		_-> rrel_4:: rrel_assign:: rrel_pos:: rrel_scp_var:: _arc4;;
		_-> rrel_5:: rrel_fixed:: rrel_scp_const:: nrel_system_identifier;;
	
		_=> nrel_then:: _..proc_print_graph_operator11;;		
		_=> nrel_else:: _..proc_print_graph_operator_return;;
	*);;

	_->_..proc_print_graph_operator11 (*
		_<-print;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _print_value;;

		_=>nrel_goto:: _..proc_print_graph_operator12;;
	*);;
//	Добавляем вершины в множество выведенных.
	_-> _..proc_print_graph_operator12 (*
		_<- genElStr3;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _printed_vertexes;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_fixed:: rrel_scp_var:: _first_inc_vertex;;

		_=> nrel_goto:: _..proc_print_graph_operator13;;
	*);;

	_-> _..proc_print_graph_operator13 (*
		_<- genElStr3;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _printed_vertexes;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_fixed:: rrel_scp_var:: _second_inc_vertex;;

		_=> nrel_goto:: _..proc_print_graph_operator3;;
	*);;
//	Удалим уже пустое множество выводимых ребер.
	_-> _..proc_print_graph_operator14 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: rrel_erase:: _edges_set;;

		_=> nrel_goto:: _..proc_print_graph_operator15;;
	*);;
//	Вывод всех вершин, которые не имеют инцидентных дуг.
//	Формируем множество вершин графа для итерации.
	_-> _..proc_print_graph_operator15 (*
		_<- searchSetStr5;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: _graph;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _el3;;
		_-> rrel_4:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc4;;
		_-> rrel_5:: rrel_fixed:: rrel_scp_const:: rrel_vertex;;
	
		_->rrel_set_3:: rrel_assign:: rrel_scp_var:: _vertexes_set;;
		_=> nrel_then:: _..proc_print_graph_operator16;;		
		_=> nrel_else:: _..proc_print_graph_operator_return;;
	*);;
//	Цикл по вершинам.
	_-> _..proc_print_graph_operator16 (*
		_<- searchElStr3;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _vertexes_set;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _cur_vertex;;

		_=> nrel_then:: _..proc_print_graph_operator17;;
		_=> nrel_else:: _..proc_print_graph_operator_21;; 
	*);;

	_-> _..proc_print_graph_operator17 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: rrel_erase:: _arc2;;

		_=> nrel_goto:: _..proc_print_graph_operator18;;
	*);;
//	Если вершина уже была выведена (т.е. она в множестве printed_vertexes)
//	то переходим на следующую итерацию.
	_-> _..proc_print_graph_operator18 (*
		_<- searchElStr3;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _printed_vertexes;;
		_-> rrel_2:: rrel_assign:: rrel_pos_const_perm:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _cur_vertex;;

		_=> nrel_then:: _..proc_print_graph_operator16;;
		_=> nrel_else:: _..proc_print_graph_operator_19;; 	
	*);;

	_-> _..proc_print_graph_operator19 (*
		_<- searchElStr5;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _visited_vertex;;
		_-> rrel_2:: rrel_assign:: rrel_const:: rrel_common:: rrel_scp_var:: _arc2;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _print_value;;
		_-> rrel_4:: rrel_assign:: rrel_pos:: rrel_scp_var:: _arc4;;
		_-> rrel_5:: rrel_fixed:: rrel_scp_const:: nrel_system_identifier;;
	
		_=> nrel_then:: _..proc_print_graph_operator20;;		
		_=> nrel_else:: _..proc_print_graph_operator_return;;
	*);;

	_->_..proc_print_graph_operator20 (*
		_<-print;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _print_value;;

		_=>nrel_goto:: _..proc_print_graph_operator16;;
	*);;
//	Подчистим память.
	_-> _..proc_print_graph_operator21 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: rrel_erase:: _vertexes_set;;

		_=> nrel_goto:: _..proc_print_graph_operator22;;
	*);;

	_-> _..proc_print_graph_operator22 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: rrel_erase:: _printed_vertexes;;

		_=> nrel_goto:: _..proc_print_graph_operator_return;;
	*);;

	_-> _..proc_print_graph_operator_return (*
		_<- return;;
	*);;
*);;
*];;