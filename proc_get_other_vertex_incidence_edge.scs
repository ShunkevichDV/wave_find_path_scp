// Возвращает в _vertex2 вершину ,которая инцидентена ребру _edge и не является вершиной  _vertex.
// Учитывает кратное вхождение вершин, т.е. петлю.
//

proc_get_other_vertex_incidence_edge
=> nrel_main_idtf:
	[Возвращает в _vertex2 вершину ,которая инцидентена ребру _edge и не является вершиной  _vertex.] (* <- lang_ru;; *);
	[Get second incedent vertex] (* <- lang_en;; *);
<- scp_program;
-> rrel_key_sc_element: _process1;;

proc_get_other_vertex_incidence_edge = [*
_process1 
_<- scp_process;

_-> rrel_1:: rrel_in:: _edge;
_-> rrel_2:: rrel_in:: _vertex1;
_-> rrel_3:: rrel_out:: _vertex2;

_<= nrel_decomposition_of_action:: _... (*

	_-> rrel_1:: _..proc_get_other_vertex_incidence_edge_operator1 (*
		_<- searchElStr3;;
		_-> rrel_1:: rrel_assign:: rrel_scp_var:: _temp_vertex1;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _edge;;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _temp_vertex2;;	

		_=> nrel_then:: _..proc_get_other_vertex_incidence_edge_operator2;;
		_=> nrel_else:: _..proc_get_other_vertex_incidence_edge_operator4;;
	*);;

	_-> _..proc_get_other_vertex_incidence_edge_operator2 (*
		_<- ifCoin;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: _vertex1;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_var:: _temp_vertex1;;

		_=> nrel_then:: _..proc_get_other_vertex_incidence_edge_operator3;;
		_=> nrel_else:: _..proc_get_other_vertex_incidence_edge_operator4;;
	*);;

	_-> _..proc_get_other_vertex_incidence_edge_operator3 (*
		_<- varAssign;;
		_-> rrel_1:: rrel_assign:: rrel_scp_var:: _vertex2;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_var:: _temp_vertex2;;

		_=> nrel_goto:: _..proc_get_other_vertex_incidence_edge_operator_return;;
	*);;

	_-> _..proc_get_other_vertex_incidence_edge_operator4 (*
		_<- ifCoin;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: _vertex1;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_var:: _temp_vertex2;;

		_=> nrel_then:: _..proc_get_other_vertex_incidence_edge_operator5;;
		_=> nrel_else:: _..proc_get_other_vertex_incidence_edge_operator_return;;
	*);;

	_-> _..proc_get_other_vertex_incidence_edge_operator5 (*
		_<- varAssign;;
		_-> rrel_1:: rrel_assign:: rrel_scp_var:: _vertex2;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_var:: _temp_vertex1;;

		_=> nrel_goto:: _..proc_get_other_vertex_incidence_edge_operator_return;;
	*);;

	_-> _..proc_get_other_vertex_incidence_edge_operator_return (*
		_<- return;;
	*);;
*);;
*];;