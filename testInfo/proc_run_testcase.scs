proc_run_testcase
=> nrel_main_idtf:
	[Программа поиска минимального пути в заданном графе] (* <- lang_ru;; *);
	[Programm for find min path in choosen graph] (* <- lang_en;; *);
<- scp_program;
-> rrel_key_sc_element: _process1;;

proc_run_testcase = [*
_process1 
_<- scp_process;

_-> rrel_1:: rrel_in:: _graph;
_-> rrel_2:: rrel_in:: _beg_vertex;
_-> rrel_3:: rrel_in:: _end_vertex;
_-> rrel_4:: rrel_in:: _test_number;

_<= nrel_decomposition_of_action:: _... (*

	_-> rrel_1:: _..proc_print_test_start (*
		_<- printNl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: [---------------Test];; 		
	
		_=> nrel_goto:: _..proc_print_test_number;;	
	*);;

	_-> _..proc_print_test_number (*
		_<- printNl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: _test_number;; 		
	
		_=> nrel_goto:: _..proc_run_testcase_operator1;;	
	*);;

	_-> _..proc_run_testcase_operator1 
	(*
		_<- call;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: proc_find_min_path;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _..params (*
			_-> rrel_1:: rrel_fixed:: rrel_scp_const:: _graph;;
			_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _beg_vertex;;
			_-> rrel_3:: rrel_fixed:: rrel_scp_const:: _end_vertex;;
			_-> rrel_4:: rrel_assign:: rrel_scp_var:: _route;;
		*);;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_run_testcase_operator2;;
	*);;

	_-> _..proc_run_testcase_operator2 (*
		_<- waitReturn;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_run_testcase_operator3;;
	*);;
		
	_-> _..proc_run_testcase_operator3 (*
		_<- ifVarAssign;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _route;;

		_=> nrel_then:: _..proc_run_testcase_print_route_begin;;
		_=> nrel_else:: _..proc_run_testcase_operator_path_does_not_exist;;
	*);;

	_-> _..proc_run_testcase_print_route_begin (*
		_<- print;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: [Path: ];;

		_=> nrel_goto:: _..proc_run_testcase_operator4;;
	*);;

	_-> _..proc_run_testcase_operator4 (*
		_<- call;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: proc_print_route;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _..params2 (*
			_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _route;;
		*);;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_run_testcase_operator5;;
	*);;
	
	_-> _..proc_run_testcase_operator5 (*
		_<- waitReturn;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_run_testcase_print_route_end;;
	*);;	
		
	_-> _..proc_run_testcase_print_route_end (*
		_<- printNl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: [;];;

		_=> nrel_goto:: _..proc_run_testcase_print_test_finish;;
	*);;
	
	_-> _..proc_run_testcase_operator_path_does_not_exist (*
		_<- printNl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: [path doesn't exist!!];;

		_=> nrel_goto:: _..proc_run_testcase_print_test_finish;;
	*);;

	_-> _..proc_run_testcase_print_test_finish (*
		_<- printNl;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: [---------------Test done!!!];;

		_=> nrel_goto:: _..proc_run_testcase_operator_return;;
	*);;

	_-> _..proc_run_testcase_operator_return (*
		_<- return;;
	*);;

*);;

*];;