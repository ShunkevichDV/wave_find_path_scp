// Удаляет все волны из списка и сам список волн.
//
proc_erase_wave_list
=> nrel_main_idtf:
	[Удаляет все волны из списка и сам список волн] (* <- lang_ru;; *);
	[Delete all waves from list] (* <- lang_en;; *);
<- scp_program;
-> rrel_key_sc_element: _process1;;

proc_erase_wave_list = [*
_process1 
_<- scp_process;

_-> rrel_1:: rrel_in:: _waves_list_head;

_<= nrel_decomposition_of_action:: _... (*

	_-> rrel_1:: _..proc_erase_wave_list_operator1 (*
		_<- varAssign;;
		_-> rrel_1:: rrel_assign:: rrel_scp_var:: _waves_list_next;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _waves_list_head;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator2;;
	*);; 

	//  Начало цикла по элементам списка
	//
	_-> _..proc_erase_wave_list_operator2 (*
		_<- varAssign;;
		_-> rrel_1:: rrel_assign:: rrel_scp_var:: _waves_list_curr;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_var:: _waves_list_next;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator3;;
	*);;

	// Удаляем волну
	//
	_-> _..proc_erase_wave_list_operator3 (*
		_<- call;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: proc_list_get_value;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _..params (*
			_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _waves_list_curr;;
			_-> rrel_2:: rrel_assign:: rrel_scp_var:: _current_wave;;
		*);;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator4;;
	*);;

	_-> _..proc_erase_wave_list_operator4 (*
		_<-waitReturn;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator5;;
	*);;

	_-> _..proc_erase_wave_list_operator5 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_erase:: rrel_scp_var:: _current_wave;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator6;;
	*);;

	// Получаем следующий элемент списка волн.
	//
	_-> _..proc_erase_wave_list_operator6 (*
		_<- call;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_const:: proc_list_get_next;;
		_-> rrel_2:: rrel_fixed:: rrel_scp_const:: _..params (*
			_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _waves_list_curr;;
			_-> rrel_2:: rrel_fixed:: rrel_scp_var:: _waves_list_next;;
		*);;
		_-> rrel_3:: rrel_assign:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator7;;			
	*);;

	_-> _..proc_erase_wave_list_operator7 (*
		_<-waitReturn;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _descr;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator8;;
	*);;

	// Удаляем текущий элемент списка.
	//	
	_-> _..proc_erase_wave_list_operator8 (*
		_<- eraseEl;;
		_-> rrel_1:: rrel_fixed:: rrel_erase:: rrel_scp_var:: _waves_list_curr;;

		_=> nrel_goto:: _..proc_erase_wave_list_operator9;; 
	*);;	

	//Если в списке остались элементы, то продолжаем цикл, иначе выхолим из процедуры.
	_-> _..proc_erase_wave_list_operator9 (*
		_<- ifVarAssign;;
		_-> rrel_1:: rrel_fixed:: rrel_scp_var:: _waves_list_next;;
		
		_=> nrel_then:: _..proc_erase_wave_list_operator2;;
		_=> nrel_else:: _..proc_erase_wave_list_operator_return;;
	*);;

	_-> _..proc_erase_wave_list_operator_return (*
		_<- return;;
	*);;		

*);;

*];;